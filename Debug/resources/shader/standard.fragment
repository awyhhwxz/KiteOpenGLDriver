#version 400 core

#include "buildin.glslinc"

precision mediump float;
uniform float _Smoothness;
uniform float _Metallic;
uniform sampler2D _Albedo;
in vec2 uv;
in vec3 normal;
in vec3 worldPos;
out vec4 FragColor;
void main()		
{
	vec3 albedo = texture2D(_Albedo, uv).rgb;

	vec3 N_normal = normalize(normal);
	vec3 lightDir = normalize(vec3(1.0, -3.0, 3.0));
	float diffuseVal = DotClamp(-lightDir, N_normal) * 0.5 + 0.5;
	vec3 diffuse = albedo * (1 - _Metallic) * vec3(diffuseVal, diffuseVal, diffuseVal);
	
	vec3 viewDir = normalize(_CameraPos - worldPos);
	vec3 reflectLightDir = reflect(lightDir, N_normal);
	float specularVal = pow(DotClamp(N_normal, reflectLightDir), _Smoothness * 100.0);
	vec3 specular = albedo * _Metallic * vec3(specularVal, specularVal, specularVal);
	vec3 col = vec3(0.01, 0.01, 0.01) + albedo * diffuse + specular;
	FragColor = vec4(col, 1.0);	
}